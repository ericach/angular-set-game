{"version":3,"sources":["app/setgame/setcard.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+D,eAAe,CAAC,CAAA;AAM/E;IAAA;QAMc,iBAAY,GAAG,IAAI,mBAAY,EAAE,CAAC;QAClC,mBAAc,GAAG,IAAI,mBAAY,EAAE,CAAC;QAEtC,kBAAa,GAAkB,EAAE,CAAC;QAClC,aAAQ,GAAY,KAAK,CAAC;IAqBtC,CAAC;IAnBG,mCAAQ,GAAR;QACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC;IACL,CAAC;IAED,8CAAmB,GAAnB;QACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACnB,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC;aACpF,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACrB,KAAK,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAC;aACpF,CAAC,CAAC;QACP,CAAC;IACL,CAAC;;IA7BD;QAAC,YAAK,EAAE;;mDAAA;IACR;QAAC,YAAK,EAAE;;mDAAA;IACR;QAAC,YAAK,EAAE;;mDAAA;IACR;QAAC,YAAK,EAAE;;kDAAA;IAER;QAAC,aAAM,EAAE;;0DAAA;IACT;QAAC,aAAM,EAAE;;4DAAA;IAXb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,0BAA0B;SAC1C,CAAC;;wBAAA;IAgCF,uBAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,wBAAgB,mBA+B5B,CAAA","file":"setcard.component.js","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'as-set-card',\n    templateUrl: 'app/setgame/setcard.html'\n})\nexport class SetCardComponent implements OnInit {\n    @Input() color: string;\n    @Input() count: number;\n    @Input() shape: string;\n    @Input() fill: string;\n\n    @Output() cardSelected = new EventEmitter();\n    @Output() cardDeselected = new EventEmitter();\n\n    private countInternal: Array<number> = [];\n    private selected: boolean = false;\n\n    ngOnInit() {\n        for (let i = 0; i < this.count; i++) {\n            this.countInternal.push(i);\n        }\n    }\n\n    toggleCardSelection() {\n        this.selected = !this.selected;\n\n        if (this.selected) {\n            this.cardSelected.emit({\n                value: {color: this.color, count: this.count, shape: this.shape, fill: this.fill}\n            });\n        } else {\n            this.cardDeselected.emit({\n                value: {color: this.color, count: this.count, shape: this.shape, fill: this.fill}\n            });\n        }\n    };\n}\n"]}